{
    "contents" : "#' logistic_growth_nls\n#'\n#' Least-squares estimates of the parameters of a logistic growth curve\n#'\n#' @param time Numeric vector of time since start of measurement (currently does not use date format)\n#' @param abundance Abundance (eg. Optical density, counts etc).\n#' @param do.interval Logical: should a 95\\% confidence interval be produced\n#' @keywords growth\n#' @examples\n#' data(navicula_growth)\n#' fitted.readings <- with(navicula_growth,\n#'                        logistic_growth_nls(time=Time,\n#'                                            abundance=ABS))\n#' head(fitted.readings)\n#' @export\n\n\nlogistic_growth_nls<-function(time, abundance, do.interval=T){\n\n  start.values=c(\"K\"=max(abundance, na.rm=T), \"r\"=1, \"N0\"=min(abundance, na.rm=T))\n  \n  \n  culture.model <- try(nls(formula=abundance ~(K*N0*exp(r*time) ) / (K + N0 * (exp(r*time)-1)),\n                           start=start.values,\n                           na.action=na.exclude,\n                           algorithm=\"port\",\n                           lower=c(0,0,0),\n                           upper=c(2*max(abundance, na.rm=T),Inf, Inf)))\n  \n  fitted.readings <- data.frame(time,abundance)\n  \n  if(class(culture.model)==\"try-error\"){\n    \n    fitted.readings$logistic.nls.N0<-NA\n    fitted.readings$logistic.nls.K<-NA\n    fitted.readings$logistic.nls.K.lower<-NA\n    fitted.readings$logistic.nls.K.upper<-NA\n    fitted.readings$logistic.nls.r<-NA\n    fitted.readings$logistic.nls.r.lower<-NA\n    fitted.readings$logistic.nls.r.upper<-NA\n    fitted.readings$logistic.nls.predicted<-NA\n    \n    \n  }else{\n    \n    #extract the parameters from the model\n    parameters<-coef(culture.model)    \n    fitted.readings$logistic.nls.N0<-parameters[\"N0\"]\n    fitted.readings$logistic.nls.K<-parameters[\"K\"]\n    fitted.readings$logistic.nls.r<-parameters[\"r\"]\n    fitted.readings$logistic.nls.predicted<-predict(culture.model)\n    \n    \n    #add confidence interval\n    interval<-try(confint(culture.model))   \n    if(any(class(interval)==\"try-error\", !do.interval)){\n      fitted.readings$logistic.nls.K.lower<-NA\n      fitted.readings$logistic.nls.K.upper<-NA\n      fitted.readings$logistic.nls.r.lower<-NA\n      fitted.readings$logistic.nls.r.upper<-NA}else{\n      fitted.readings$logistic.nls.r.lower<-interval[\"r\", \"2.5%\"]\n      fitted.readings$logistic.nls.r.upper<-interval[\"r\", \"97.5%\"]\n      fitted.readings$logistic.nls.K.lower<-interval[\"K\", \"2.5%\"]\n      fitted.readings$logistic.nls.K.upper<-interval[\"K\", \"97.5%\"]}\n    \n  }\n  \n  return(fitted.readings)\n}\n",
    "created" : 1395405897799.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3267054747",
    "id" : "F3D1745A",
    "lastKnownWriteTime" : 1395408485,
    "path" : "~/Documents/R/Useful-R-functions/growth_curves/R/logistic_growth_nls.R",
    "project_path" : "R/logistic_growth_nls.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}