?nls
load("/Users/LowDecarie/Documents/R/Useful-R-functions/growth_curves/data/growth_data.RData")
View(readings)
CO2_navicular_growth <- readings
save(CO2_navicular_growth, file="./data/CO2_navicular_growth.RData")
head(CO2_navicular_growth)
CO2_navicular_growth <- CO2_navicular_growth[,names(CO2_navicular_growth) %in% c("Time","ABS")]
save(CO2_navicular_growth, file="./data/CO2_navicular_growth.RData")
CO2_navicular_growth
readings
navicula_growth <- CO2_navicular_growth
save(navicula_growth, file="./data/navicula_growth.RData")
library(growthcurves)
require(growthcurves)
help(package=growthcurves)
time=navicula_growth$Time
abundance=navicula_growth$ABS
fitted.readings <- data.frame(time,abundance)
fitted.readings
start.values=c("K"=max(abundance, na.rm=T), "r"=1, "N0"=min(abundance, na.rm=T))
culture.model <- try(nls(formula=abundance ~(K*N0*exp(r*time) ) / (K + N0 * (exp(r*time)-1)),
start=start.values,
na.action=na.exclude,
algorithm="port",
lower=c(0,0,0),
upper=c(2*max(abundance, na.rm=T),Inf, Inf)))
parameters<-coef(culture.model)
fitted.readings$logistic.nls.N0<-parameters["N0"]
fitted.readings$logistic.nls.K<-parameters["K"]
fitted.readings$logistic.nls.r<-parameters["r"]
fitted.readings$logistic.nls.predicted<-predict(culture.model)
fitted.readings
library(growthcurves)
library(growthcurves)
data(navicula_growth)
head(navicula_growth)
library(growthcurves)
?logistic_growth_nls
library(growthcurves)
library(growthcurves)
library(growthcurves)
require(devtools)
install_github("growthcurves","low-decarie")
require(roxygen)
install.packages("roxygen")
install.packages("roxygen2")
install.packages("roxygen2")
library(growthcurves)
data(navicula_growth)
fitted.readings <- with(navicula_growth,
logistic_growth_nls(time=Time,
abundance=ABS))
logistic_growth_nls
library(growthcurves)
logistic_growth_nls
data(navicula_growth)
fitted.readings <- with(navicula_growth,
logistic_growth_nls(time=Time,
abundance=ABS))
head(fitted.readings)
library(growthcurves)
data(navicula_growth)
fitted.readings <- with(navicula_growth,
logistic_growth_nls(time=Time,
abundance=ABS))
head(fitted.readings)
library(growthcurves)
data(navicula_growth)
fitted.readings <- with(navicula_growth,
logistic_growth_nls(time=Time,
abundance=ABS))
head(fitted.readings)
do.interval=F
library(growthcurves)
data(navicula_growth)
fitted.readings <- with(navicula_growth,
logistic_growth_nls(time=Time,
abundance=ABS))
head(fitted.readings)
head(fitted.readings)
library(growthcurves)
data(navicula_growth)
fitted.readings <- with(navicula_growth,
exponential_growth_nls(time=time,
abundance=abundance))
head(fitted.readings)
library(growthcurves)
fitted.readings <- with(navicula_growth,
exponential_growth_nls(time=time,
abundance=ABS))
data(navicula_growth)
navicula_growth
library(growthcurves)
fitted.readings <- with(navicula_growth,
exponential_growth_nls(time=Time,
abundance=ABS))
library(growthcurves)
data(navicula_growth)
fitted.readings <- with(navicula_growth,
exponential_growth_nls(time=Time,
abundance=ABS))
head(fitted.readings)
library(growthcurves)
data(navicula_growth)
fitted.readings <- with(navicula_growth,
exponential_growth_nls(time=Time,
abundance=ABS))
head(fitted.readings)
library(growthcurves)
library(growthcurves)
library(growthcurves)
library(growthcurves)
time=navicula_growth$Time
abundance=navicula_growth$ABS
abundance
lm(abundance~time)
coef(lm(abundance~time))
coef(lm(abundance~time))[2]
2^-1
exponential_decline_nls<-function(time, abundance, do.interval=F){
model<-try(nls(formula =abundance ~ abundance0 * 2 ^ (growth.rate * time),
start = list(abundance0 = max(abundance,na.rm=T),
growth.rate = -1),
na.action=na.exclude,
algorithm="port",
lower=c(0,0),
upper=Inf))
fitted.readings <- data.frame(time,abundance)
if(class(model)=="try-error"){
fitted.readings$N0<-NA
fitted.readings$r<-NA
fitted.readings$predicted<-NA
}else{
parameters<-t(data.frame(coef(model,matrix=T)))
fitted.readings$N0<-parameters[1]
fitted.readings$r<-parameters[2]
fitted.readings$predicted<-predict(model)
interval<-try(confint(model))
if(all(class(interval)=="try-error", do.interval)){
fitted.readings$r.lower<-NA
fitted.readings$r.upper<-NA
}
if(all(!class(interval)=="try-error", do.interval)){
fitted.readings$r.lower<-interval["growth.rate", "2.5%"]
fitted.readings$r.upper<-interval["growth.rate", "97.5%"]
}
}
return(fitted.readings)
}
exponential_decline_nls<-function(time, abundance, do.interval=F){
model<-try(nls(formula =abundance ~ abundance0 * 2 ^ (growth.rate * time),
start = list(abundance0 = max(abundance,na.rm=T),
growth.rate = -1),
na.action=na.exclude,
algorithm="port",
lower=c(0,0),
upper=Inf))
fitted.readings <- data.frame(time,abundance)
if(class(model)=="try-error"){
fitted.readings$N0<-NA
fitted.readings$r<-NA
fitted.readings$predicted<-NA
}else{
parameters<-t(data.frame(coef(model,matrix=T)))
fitted.readings$N0<-parameters[1]
fitted.readings$r<-parameters[2]
fitted.readings$predicted<-predict(model)
interval<-try(confint(model))
if(all(class(interval)=="try-error", do.interval)){
fitted.readings$r.lower<-NA
fitted.readings$r.upper<-NA
}
if(all(!class(interval)=="try-error", do.interval)){
fitted.readings$r.lower<-interval["growth.rate", "2.5%"]
fitted.readings$r.upper<-interval["growth.rate", "97.5%"]
}
}
return(fitted.readings)
}
library(growthcurves)
library(growthcurves)
library(growthcurves)
library(growthcurves)
library(growthcurves)
start.values = c(K = max(abundance, na.rm = T),
r = r_start,
N0 = max(c(min(abundance, na.rm = T),10^-3)))
library(growthcurves)
r_start
library(growthcurves)
range(1:10)
diff(range(1:10))
library(growthcurves)
data(navicula_growth)
with(navicula_growth,
#'                        logistic_growth_mle_norm(time=Time,
#'                                            abundance=ABS))
with(navicula_growth,
logistic_growth_mle_norm(time=Time,
abundance=ABS))
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS))
library(growthcurves)
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS))
#' logistic.growth.mle.norm
#'
#' Maximum likelihood estimation of logistic growth parameters assuming normal error
#'
#' @param time Numeric vector of time since start of measurement (currently does not use date format)
#' @param abundance Abundance (eg. Optical density, counts etc).
#' @param do.interval Logical: should a 95\% confidence interval be produced
#' @keywords growth
#' @examples
#' data(navicula_growth)
#' fitted.readings <- with(navicula_growth,
#'                        logistic_growth_mle_norm(time=Time,
#'                                            abundance=ABS))
#' head(fitted.readings)
#' @export
logistic_growth_mle_norm<-function(abundance, time, upper){
readings <- data.frame(time,abundance)
fitted.readings<-readings
start.values = c(K = max(abundance, na.rm = T),
r = r_start,
N0 = max(c(min(abundance, na.rm = T),10^-3)),
st.dev <- 0.5*sd(abundance))
#Log likelyhood function to be minimized
like.growth<-function(parameters=start.values, readings){
#Parameter extraction
K<-parameters[[1]]
r<-parameters[[2]]
N0<-parameters[[3]]
st.dev<-parameters[[4]]
#Logistic growth model
Nt<-(K*N0*exp(r*time) ) / (K + N0 * (exp(r*time)-1))
#Nt<-(N0*K) / (N0 + (K-N0)*exp(-r*t))  #Synonymous model
#log likelihood estimate
#Nomral distribution
likelihood<- -sum(dnorm(abundance, Nt, sd=st.dev, log=T))
# Sanity bounds (remove if using "L-BFGS-B" or constrOptim
if(any(c(Nt<0,
Nt>upper,
K>upper,
N0<0,
r<0,
st.dev<0,
st.dev>upper))){likelihood<-NA}
return(likelihood)
}
try.test<-try({
fit<-optim(par=c(1, 1, 0.01,0.1),
fn=like.growth,
readings=readings)
#extract fit values
K<-fit$par[1]
r<-fit$par[2]
N0<-fit$par[3]
predicted<-(K*N0*exp(r*time) ) / (K + N0 * (exp(r*time)-1))
fitted.readings$N0<-N0
fitted.readings$K<-K
fitted.readings$r<-r
fitted.readings$predicted<-predicted
})
#Pad with NAs for failed fits
if(class(try.test)=="try-error"){
fitted.readings$N0<-NA
fitted.readings$K<-NA
fitted.readings$r<-NA
fitted.readings$predicted<-NA
}
return(fitted.readings)
}
library(growthcurves)
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS))
library(growthcurves)
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS))
library(growthcurves)
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS))
attach(navicula_growth)
time=Time
abundance=ABS
r_start <- try(as.numeric(coef(lm(log(abundance)~time))[2]), silent = T)
if(class(r_start)=="try-error")r_start <- 0.5
r_start
start.values = c(K = max(abundance, na.rm = T),
r = r_start,
N0 = max(c(min(abundance, na.rm = T),10^-3)))
r_start <- try(as.numeric(coef(lm(log(abundance)~time))[2]), silent = T)
if(class(r_start)=="try-error")r_start <- 0.5
start.values = c(K = max(abundance, na.rm = T),
r = r_start,
N0 = max(c(min(abundance, na.rm = T),10^-3)),
st.dev <- 0.5*sd(abundance))
start.values
start.values = c(K = max(abundance, na.rm = T),
r = r_start,
N0 = max(c(min(abundance, na.rm = T),10^-3)),
st.dev = 0.5*sd(abundance))
start.values
library(growthcurves)
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS))
library(growthcurves)
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS))
library(growthcurves)
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS))
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS),upper=2*max(abundance))
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS),upper=2*max(abundance,na.rm=T))
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS,upper=2*max(abundance,na.rm=T)))
library(growthcurves)
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS,upper=2*max(abundance,na.rm=T)))
library(growthcurves)
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS,upper=2*max(abundance,na.rm=T)))
library(growthcurves)
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS,upper=2*max(abundance,na.rm=T)))
library(growthcurves)
data(navicula_growth)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS,upper=2*max(abundance,na.rm=T)))
attach(navicula_growth)
attach(navicula_growth)
time=Time
abundance=ABS
fitted.readings<-data.frame(time,abundance)
r_start <- try(as.numeric(coef(lm(log(abundance)~time))[2]), silent = T)
if(class(r_start)=="try-error")r_start <- 0.5
start.values = c(K = max(abundance, na.rm = T),
r = r_start,
N0 = max(c(min(abundance, na.rm = T),10^-3)),
st.dev = 0.5*sd(abundance))
like.growth<-function(parameters=start.values, time, abundance){
#Parameter extraction
K<-parameters[[1]]
r<-parameters[[2]]
N0<-parameters[[3]]
st.dev<-parameters[[4]]
#Logistic growth model
Nt<-(K*N0*exp(r*time) ) / (K + N0 * (exp(r*time)-1))
#Nt<-(N0*K) / (N0 + (K-N0)*exp(-r*t))  #Synonymous model
#log likelihood estimate
#Nomral distribution
likelihood<- -sum(dnorm(abundance, Nt, sd=st.dev, log=T))
# Sanity bounds (remove if using "L-BFGS-B" or constrOptim
if(any(c(Nt<0,
Nt>upper,
K>upper,
N0<0,
r<0,
st.dev<0,
st.dev>upper))){likelihood<-NA}
return(likelihood)
}
fit<-optim(par=start.values,
fn=like.growth,
time=time,
abundance=abundance)
fit<-optim(par=start.values,
fn=like.growth,
time=time,
abundance=abundance,
upper=upper)
upper
upper=2*max(abundance)
fit<-optim(par=start.values,
fn=like.growth,
time=time,
abundance=abundance,
upper=upper)
start.values
like.growth(parameters=start.values, time, abundance)
fit<-optim(par=start.values,
fn=like.growth,
time=time,
abundance=abundance)
fit
library(growthcurves)
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS,upper=2*max(abundance,na.rm=T)))
with(navicula_growth,logistic_growth_mle_norm(time=Time,
abundance=ABS))
?nls
library(growthcurves)
library(growthcurves)
library(growthcurves)
library(growthcurves)
